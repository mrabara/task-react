{"version":3,"sources":["TaskRow.js","component/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["TaskRow","props","name","Fragment","AddTask","state","newTasks","newStatus","validate","btnClickHandler","trim","addTaskFunction","setState","selectStatus","e","target","value","onChangeHandler","className","id","type","this","onChange","onClick","Component","App","tasks","status","pendingTasks","doneTasks","tasksFunction","newTask","newStat","pendingTask","slice","push","doneTask","forEach","task","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.178cd8ac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction TaskRow(props) {\r\n  const { name } = props;\r\n    return(\r\n      <React.Fragment>\r\n         <tr>\r\n           <td> \r\n              {name}\r\n          </td>\r\n         </tr>\r\n      </React.Fragment>\r\n    );\r\n}\r\nexport default TaskRow;","import {Component} from 'react';\r\n\r\nclass AddTask extends Component{\r\n    state = {\r\n        newTasks: '',\r\n        newStatus: '',\r\n        validate: '',\r\n    }\r\n\r\n    btnClickHandler = () =>{\r\n\r\n        if((this.state.newTasks.trim() === '') ){\r\n          this.setState({\r\n              newTasks: '', \r\n              validate: 'This field is required!',\r\n        })\r\n          return;\r\n        }\r\n    \r\n        this.props.addTaskFunction(this.state.newTasks, this.state.newStatus)\r\n        this.setState({newTasks: ''})\r\n      }\r\n     \r\n      selectStatus = (e) =>{\r\n        this.setState({\r\n          newStatus: e.target.value,\r\n        })\r\n      }\r\n    \r\n      onChangeHandler = (e) =>{\r\n          this.setState({\r\n              newTasks: e.target.value, \r\n              validate:'',\r\n        });\r\n      }\r\n  render(){\r\n    return(\r\n\r\n        <div className='new-task'>\r\n              <label>New Task</label>\r\n              <input id='add-task' type='text' value={this.state.newTasks}  onChange={(e) => this.onChangeHandler(e)}/>\r\n              <small className='red-text'>{this.state.validate}</small>\r\n              <select value={this.state.newStatus} onChange={e =>{this.selectStatus(e)}}>\r\n                <option> Select Status</option>\r\n                <option value='pending'>Pending</option>\r\n                <option value='done'>Done</option>\r\n              </select>\r\n              <button onClick={this.btnClickHandler}>Add Task</button>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nexport default AddTask;","import React, {Component} from 'react';\nimport TaskRow from './TaskRow';\nimport AddTask from './component/AddTask';\nimport './App.css';\n\nclass App extends Component{\n  state ={ \n    tasks: [\n      {name: 'eat', status: 'pending'},\n      {name: 'code', status: 'pending'},\n      {name: 'sleep', status: 'done'},\n    ],\n    pendingTasks : [],\n    doneTasks : [],\n  \n  } \n\n  componentDidMount(){\n    let pendingTask = this.state.pendingTasks.slice(0);\n    let doneTask = this.state.doneTasks.slice(0);\n\n    this.state.tasks.forEach(task =>{\n      if(task.status === 'pending'){\n        pendingTask.push(task);\n      }else if(task.status ==='done'){\n        doneTask.push(task);\n      }\n    })\n    \n    this.setState({\n      pendingTasks: pendingTask,\n      doneTasks: doneTask,\n    })\n\n  }\n\n\n\n  tasksFunction = (newTask, newStat) =>{\n    if(newStat === 'pending'){\n        let pendingTask = this.state.pendingTasks.slice(0);\n        pendingTask.push({\n          name: newTask,\n          status:newStat,\n        });\n        this.setState({\n          pendingTasks: pendingTask,\n          \n      })\n    }else if(newStat === 'done'){\n      let doneTask = this.state.doneTasks.slice(0);\n      doneTask.push({\n        name:newTask,\n        status: newStat,\n      });\n      this.setState({\n        doneTasks: doneTask,\n      \n      })\n    }\n  }\n\n  render(){\n    return(       \n      <div className='container'>\n              <h1>Task Lists</h1>\n              <AddTask  addTaskFunction={this.tasksFunction}/>\n              <table className='pending'>\n                <thead>\n                  <tr>\n                    <th><h3>Pending Tasks</h3></th>\n                  </tr>\n                </thead>\n                <tbody>\n                      {this.state.pendingTasks.map(task =>{return <TaskRow  name={task.name}/>})}\n                </tbody>\n              </table>\n              <table className='done'>\n                <thead>\n                  <tr>\n                    <th><h3>Done Tasks</h3></th>\n                  </tr>\n                </thead>\n                <tbody>\n                      {this.state.doneTasks.map(task =>{return <TaskRow name={task.name}/>})} \n                </tbody>\n              </table>\n        </div>\n    )\n  }\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}